// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ByState = (function(_super) {
    __extends(ByState, _super);

    function ByState(id, data, color) {
      this.hide_details = __bind(this.hide_details, this);
      this.show_details = __bind(this.show_details, this);
      this.create_vis = __bind(this.create_vis, this);
      var i,
        _this = this;

      ByState.__super__.constructor.call(this, id, data, color);
      this.max_range = 90;
      this.scale();
      this.data.forEach(function(d) {
        d.radius = _this.radius_scale(d.value);
        d.x = Math.random() * _this.width;
        return d.y = Math.random() * _this.height;
      });
      this.domain = d3.range(100, 1700, 200);
      this.color_class = d3.scale.threshold().domain(this.domain).range((function() {
        var _i, _results;

        _results = [];
        for (i = _i = 8; _i >= 0; i = --_i) {
          _results.push("q" + i + "-9");
        }
        return _results;
      })());
    }

    ByState.prototype.create_vis = function() {
      var values,
        _this = this;

      ByState.__super__.create_vis.call(this);
      this.legend = new Legend(this.vis, (function(i) {
        return _this.color_class(_this.domain[i] - 1);
      }), ["< 100", " < 300", "< 500", "< 700", "< 900", "< 1100", "< 1300", "< 1500", "1500 or more"], 'Violent crimes per 100,000 population', {
        x: 10,
        y: 40
      });
      this.legend.show(true);
      values = [100000, 1000000, 10000000];
      if ((this.bubble_scale == null) || !this.bubble_scale.exists()) {
        return this.bubble_scale = new CircularScale("vis", "circularScale", "Circles are sized by population", this.radius_scale, values, {
          x: 800,
          y: -670
        });
      } else {
        return this.bubble_scale.refresh(this.radius_scale, values);
      }
    };

    ByState.prototype.show_details = function(data) {
      var content;

      content = "Population: " + (this.fixed_formatter(data.value)) + "<br/>Violent: " + (this.fixed_formatter(data.violent)) + "<br />Property: " + (this.fixed_formatter(data.property)) + " <br />";
      content += "Violent Crime per 100,000: " + (this.percent_formatter(data.group));
      return this.tip = new Opentip("#" + data.id, content, data.name, {
        style: "glass",
        target: true,
        showOn: "creation",
        stem: "middle",
        tiptJoint: "middle"
      });
    };

    ByState.prototype.hide_details = function(data) {
      var _ref;

      return (_ref = this.tip) != null ? _ref.hide() : void 0;
    };

    return ByState;

  })(this.BubbleChart);

}).call(this);
